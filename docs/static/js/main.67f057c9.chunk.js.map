{"version":3,"sources":["components/Header.tsx","components/Issue.tsx","components/Issues.tsx","components/IssueDetail.tsx","components/Pagenation.tsx","api/IssueAPI.tsx","components/App.tsx","serviceWorker.ts","index.tsx","components/IssueDetail.module.css","components/Header.module.css","components/Issues.module.css","components/Issue.module.css","components/App.module.css","components/Pagenation.module.css"],"names":["Header","className","styles","root","to","title","Issue","props","number","Issues","list","issues","map","issue","key","item","onClick","onIssueItemClick","body","IssueDetail","source","Pagenation","isDisable","page","disable","styleFirst","pageLink","first","stylePrev","prev","styleNext","next","styleLast","last","handleClick","e","preventDefault","container","current","getIssues","perPage","fetch","getLinkHeaderInfoFromHeaders","headers","getPage","url","undefined","query","split","URLSearchParams","get","linkHeader","splitedLinkHeader","parsedData","Map","linkInfo","exec","set","App","useState","currentPage","setCurrentPage","firstPage","setFirstPage","nextPage","setNextPage","prevPage","setPrevPage","lastPage","setLastPage","setIssues","useEffect","a","then","res","linkHeaderInfo","json","result","error","main","exact","path","render","history","match","location","search","num","endsWith","push","selectedNum","params","selectedIssue","filter","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.67f057c9.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./Header.module.css\";\nimport { Link } from \"react-router-dom\";\n\n/**\n * ヘッダーコンポーネント\n */\nconst Header = () => {\n  return (\n    <header className={styles.root}>\n      <Link to=\"/issues\" className={styles.title}>\n        Issues\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport styles from \"./Issue.module.css\";\nimport { IssueProps } from \"../common/IssueProps\";\n\n/**\n * Issueコンポーネント\n *\n * @param props Issue情報\n */\nconst Issue = (props: IssueProps) => {\n  return (\n    <>\n      <p className={styles.number}>#{props.number}</p>\n      <p className={styles.title}>{props.title}</p>\n    </>\n  );\n};\n\nexport default Issue;\n","import React from \"react\";\nimport styles from \"./Issues.module.css\";\nimport Issue from \"./Issue\";\nimport { IssueProps } from \"../common/IssueProps\";\n\n// Issue一覧情報\ntype IssuesProps = {\n  issues: IssueProps[];\n  onIssueItemClick: (num: number) => void;\n};\n\n/**\n * Issue一覧コンポーネント\n * @param props Issues情報\n */\nconst Issues = (props: IssuesProps) => {\n  return (\n    <>\n      <div className={styles.list}>\n        {props.issues.map(issue => (\n          <div\n            key={issue.number}\n            className={styles.item}\n            onClick={() => props.onIssueItemClick(issue.number)}\n          >\n            <Issue\n              key={issue.number}\n              number={issue.number}\n              title={issue.title}\n              body={issue.body}\n            />\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Issues;\n","import React from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport styles from \"./IssueDetail.module.css\";\nimport { IssueProps } from \"../common/IssueProps\";\n\n/**\n * Issue詳細コンポーネント\n *\n * @param props Issue情報\n */\nconst IssueDetail = (props: IssueProps) => {\n  return (\n    <div>\n      <h1 className={styles.title}>\n        {props.title}&nbsp;\n        <span className={styles.number}>#{props.number}</span>\n      </h1>\n      <p className={styles.body}>\n        <ReactMarkdown source={props.body} />\n      </p>\n    </div>\n  );\n};\n\nexport default IssueDetail;\n","import React from \"react\";\nimport styles from \"./Pagenation.module.css\";\nimport { Link } from \"react-router-dom\";\n\n// ページネーション情報\ntype PagenationProps = {\n  first: number;\n  next: number;\n  prev: number;\n  last: number;\n  current: number;\n};\n\n/**\n * ページネーションコンポーネント\n * @param props ページネーション情報\n */\nconst Pagenation = (props: PagenationProps) => {\n  // 非活性のスタイル\n  const isDisable = (page: number) => (page <= 0 ? styles.disable : \"\");\n\n  // これ以上ページ遷移できない場合に非活性のスタイルを追加する\n  const styleFirst = `${styles.pageLink} ${isDisable(props.first)}`;\n  const stylePrev = `${styles.pageLink} ${isDisable(props.prev)}`;\n  const styleNext = `${styles.pageLink} ${isDisable(props.next)}`;\n  const styleLast = `${styles.pageLink} ${isDisable(props.last)}`;\n\n  // ページ遷移時の処理\n  const handleClick = (e: React.MouseEvent, page: number) => {\n    if (page <= 0) {\n      e.preventDefault();\n    }\n  };\n\n  return (\n    <div className={styles.container}>\n      <Link\n        to={`/issues?page=${props.first}`}\n        className={styleFirst}\n        onClick={e => handleClick(e, props.first)}\n      >\n        ＜＜\n      </Link>\n      <Link\n        to={`/issues?page=${props.prev}`}\n        className={stylePrev}\n        onClick={e => handleClick(e, props.prev)}\n      >\n        ＜\n      </Link>\n      <span className={styles.current}>{props.current}</span>\n      <Link\n        to={`/issues?page=${props.next}`}\n        className={styleNext}\n        onClick={e => handleClick(e, props.next)}\n      >\n        ＞\n      </Link>\n      <Link\n        to={`/issues?page=${props.last}`}\n        className={styleLast}\n        onClick={e => handleClick(e, props.last)}\n      >\n        ＞＞\n      </Link>\n    </div>\n  );\n};\n\nexport default Pagenation;\n","/**\n * Issue一覧を取得します。\n *\n * @param page 取得するページ\n * @param perPage 取得する項目数\n */\nexport function getIssues(page: number, perPage = 10) {\n  return fetch(\n    `https://api.github.com/repos/facebook/react/issues?page=${page}&amp;per_page=${perPage}`\n  );\n}\n\n/**\n * ヘッダーからリンクヘッダー情報を取得します。\n *\n * @param headers ヘッダー\n */\nexport function getLinkHeaderInfoFromHeaders(headers: Headers) {\n  // ページ情報を取得する\n  const getPage = (url: string | undefined) => {\n    if (url === undefined) {\n      return 0;\n    }\n    const query = url.split(\"?\")[1];\n    const params = new URLSearchParams(query);\n    const page = params.get(\"page\");\n    return page === null ? 0 : +page;\n  };\n\n  // リスポンスヘッダーからリンクヘッダー情報を取得\n  const linkHeader = headers.get(\"Link\");\n  if (linkHeader === null) {\n    return { first: 0, next: 0, prev: 0, last: 0 };\n  }\n\n  // リンクヘッダー情報は、\",\" 区切りで格納されているため、分割する\n  // example:\n  // <https://api.github.com/user/repos?page=3&per_page=100>; rel=\"next\",\n  // <https://api.github.com/user/repos?page=50&per_page=100>; rel=\"last\"\n  const splitedLinkHeader = linkHeader.split(\",\");\n\n  // Mapの形に成形する\n  // example:\n  // \"next\": \"https://api.github.com/user/repos?page=3&per_page=100\"\n  // \"last\": \"https://api.github.com/user/repos?page=50&per_page=100\"\n  let parsedData = new Map<string, string>();\n  for (const linkHeader of splitedLinkHeader) {\n    const linkInfo = /<([^>]+)>;\\s+rel=\"([^\"]+)\"/gi.exec(linkHeader);\n\n    if (linkInfo) {\n      parsedData.set(linkInfo[2], linkInfo[1]);\n    }\n  }\n\n  return {\n    first: getPage(parsedData.get(\"first\")),\n    next: getPage(parsedData.get(\"next\")),\n    prev: getPage(parsedData.get(\"prev\")),\n    last: getPage(parsedData.get(\"last\"))\n  };\n}\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport styles from \"./App.module.css\";\nimport Header from \"./Header\";\nimport Issues from \"./Issues\";\nimport IssueDetail from \"./IssueDetail\";\nimport Pagenation from \"./Pagenation\";\nimport { IssueProps } from \"../common/IssueProps\";\nimport { getIssues, getLinkHeaderInfoFromHeaders } from \"../api/IssueAPI\";\n\n/**\n * アプリコンポーネント\n */\nconst App = () => {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [firstPage, setFirstPage] = useState(0);\n  const [nextPage, setNextPage] = useState(0);\n  const [prevPage, setPrevPage] = useState(0);\n  const [lastPage, setLastPage] = useState(0);\n  const [issues, setIssues] = useState<IssueProps[]>([]);\n\n  useEffect(() => {\n    (async () => {\n      if (currentPage === 0) {\n        return;\n      }\n      await getIssues(currentPage)\n        .then(res => {\n          // リンクヘッダー情報を取得\n          const linkHeaderInfo = getLinkHeaderInfoFromHeaders(res.headers);\n          setFirstPage(linkHeaderInfo.first);\n          setNextPage(linkHeaderInfo.next);\n          setPrevPage(linkHeaderInfo.prev);\n          setLastPage(linkHeaderInfo.last);\n\n          // JSONデータを取得\n          return res.json() as Promise<IssueProps[]>;\n        })\n        .then(\n          result => {\n            setIssues(result);\n          },\n          error => {}\n        );\n    })();\n\n    // currentPageが更新されると再取得するよう設定\n  }, [currentPage]);\n\n  return (\n    <BrowserRouter>\n      <Header />\n      <main className={styles.main}>\n        <Switch>\n          <Route\n            exact\n            path=\"/issues\"\n            render={({ history, match, location }) => {\n              const query = new URLSearchParams(location.search);\n              const page = query.get(\"page\");\n              setCurrentPage(page === null ? 1 : +page);\n\n              return (\n                <>\n                  <Issues\n                    issues={issues}\n                    onIssueItemClick={num => {\n                      const nextPage = match.url.endsWith(\"/\")\n                        ? num\n                        : `/${num}`;\n                      history.push(`${match.url}${nextPage}`);\n                    }}\n                  />\n                  <Pagenation\n                    first={firstPage}\n                    next={nextPage}\n                    prev={prevPage}\n                    last={lastPage}\n                    current={currentPage}\n                  />\n                </>\n              );\n            }}\n          />\n          <Route\n            exact\n            path=\"/issues/:number\"\n            render={({ match }) => {\n              const selectedNum = +match.params.number;\n              const selectedIssue = issues.filter(issue => {\n                return selectedNum === issue.number;\n              })[0] as IssueProps;\n\n              return (\n                <IssueDetail\n                  number={selectedIssue.number}\n                  title={selectedIssue.title}\n                  body={selectedIssue.body}\n                />\n              );\n            }}\n          />\n          />\n        </Switch>\n      </main>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"IssueDetail_title__33-kF\",\"number\":\"IssueDetail_number__xCpQS\",\"body\":\"IssueDetail_body__11ClC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__zyAO0\",\"title\":\"Header_title__17EAQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Issues_list__2O28g\",\"item\":\"Issues_item__DKHzQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"number\":\"Issue_number__3-M78\",\"title\":\"Issue_title__1nmdu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__jNC5T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Pagenation_container__2pmFw\",\"box\":\"Pagenation_box__3ugsN\",\"pageLink\":\"Pagenation_pageLink__1Rs0m Pagenation_box__3ugsN\",\"current\":\"Pagenation_current__2pn-v Pagenation_box__3ugsN\",\"disable\":\"Pagenation_disable__2NCyP\"};"],"sourceRoot":""}